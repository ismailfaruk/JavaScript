/*Programming Challenge: Movie Theater Seating
Section 8, Lecture 36

For this programming challenge, you will create a program that simulates the seats in a movie theater using a 2D array and calculates total 
revenue based on the seating chart represented by that array.  You will start by creating 2 functions:

    The first function will create the 2D array and will take 2 randomly generated numbers as inputs.  In relation to the 2D array that the 
    function is creating, the first input represents the number of rows, and the second input represents the number of columns.  Inside the 
    function, the array should have all of its indexes filled in with random integers between and inclusive of the range 0 to 4.  
    After creating the array, the function should end by returning it.

    The second function should take the array created by the first function as its input.  Then, it should calculate and return the total 
    revenue (with 2 decimal numbers displayed after the decimal point) based on the numbers of the array representing the following types 
    of customers:

        0 represents an empty seat, which means no revenue.

        1 represents an adult.  The price of 1 ticket for an adult is $9.00.

        2 represents a child.  The price of 1 ticket for a child is $7.00.

        3 represents a senior citizen.  The price of 1 ticket for a senior citizen is $8.00.

        4 represents a student.  The price for 1 ticket after the student discount is applied is $8.50.

At the end of your program, you should call the first function with 2 randomly generated integers each between and inclusive of 
the range 5 to 15 as its inputs.  Log what is returned to the console. 

After that, call the second function with the array generated by the first function as its input.  Log what is returned to the console.*/

// This function a creates a 2D array representing rows and columns of
// seats in a movie theater and the types of people seated in them.
// It takes 2 inputs representing the number of rows and number columns
// of seats in the theater.
function fillAllSeats(rows, columns) {
    let seats = []; // seats will be the 2D array
    let row = []; // will hold an array representing a row in the theater
    // The outer for loop runs the same number of times as the value of row,
    // meaning it runs its code once for each row in the array.
    for (let i1 = 0; i1 < rows; i1++) {
    // The inner for loop runs the same number of times as the value
    // of columns. It does this for each row in the array.
        for (let i2 = 0; i2 < columns; i2++) {
    // pushes random values between 0 and 4 to the row array
            row.push(Math.floor(Math.random() * 5));
        }
        seats.push(row); // pushes a row array to seats to give it a new row
        row = []; // resets row by reassigning it an empty array
    }
    return seats; // returns the new 2D array
}
    
// This function calculates the total revenue gained from the seated customers.
// It will take a 2D array as its input.
function totalRevenue(customers) {
    //prices for different types of customers where 0 represents an empty seat
    const adult = 9.00; // represented by a 1
    const child = 7.00; // represented by a 2
    const senior = 8.00; // represented by a 3
    const student = 8.50; // represented by a 4
    let money = 0; // This variable will hold the total revenue.
    // This for loop iterates through the rows of the array customers.
    for (let i1 = 0; i1 < customers.length; i1++) {
    // This for loop iterates through the columns of each row.

        for (let i2 = 0; i2 < customers[i1].length; i2++) {
            // This flow control block adds different values to money
            // based on the value of customers[i1][i2] to get the total
            // revenue.
            if (customers[i1][i2] == 1) {
                money += adult;
            } else if (customers[i1][i2] == 2) {
                money += child;
            } else if (customers[i1][i2] == 3) {
                money += senior;
            } else if (customers[i1][i2] == 4) {
                money += student;
            } else {
                money += 0; // This is because 0 represents an empty seat.
            }
        }
    }
    return money; // returns the total revenue
}
        
// generates a random number between 5 and 15 for the number of rows
const numOfRows = Math.floor(Math.random() * 11) + 5;

// generates a random number between 5 and 15 for the number of columns
const numOfColumns = Math.floor(Math.random() * 11) + 5;

// This is a call of the first function fillAllSeats that has been assigned
// to a variable so that the variable can be used as an input later.
const simulatedTheater = fillAllSeats(numOfRows, numOfColumns);

// This logs the 2D array from the first function call to the console.
console.log(simulatedTheater);

// This calls the second function and logs the resulting value for total revenue
// to the console.
console.log(totalRevenue(simulatedTheater));
